package com.superventas.pos.view.forms;

import com.superventas.pos.model.Categorias;
import com.superventas.pos.model.Empleados;
import com.superventas.pos.model.Inventario;
import com.superventas.pos.model.Productos;
import com.superventas.pos.model.Proveedor;
import com.superventas.pos.model.Rol;
import com.superventas.pos.persistence.CategoriasDAO;
import com.superventas.pos.persistence.InventarioDAO;
import com.superventas.pos.persistence.ProductosDAO;
import com.superventas.pos.persistence.ProveedorDAO;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.util.List;
import java.util.Locale;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author conta
 */
public class FormProducto extends javax.swing.JFrame {

    private ProveedorDAO proDAO = new ProveedorDAO();
    private CategoriasDAO catDAO = new CategoriasDAO();
    private ProductosDAO productoDAO = new ProductosDAO();
    private InventarioDAO invDAO = new InventarioDAO();
    private JTable tabla;
    private File selectedFile;
    private String destinationPath;
    private Productos acProducto = null;
    private Timer timer = new Timer();

    /**
     * Creates new form FormProductos
     */
    public FormProducto(JTable tabla, String titulo) {
        initComponents();
        this.tabla = tabla;
        LabelTOP.setText(titulo);
        llenarComboBoxProveedor();
        llenarComboBoxCategorias();
        this.setLocationRelativeTo(null);
    }

    public FormProducto(JTable tabla, String titulo, Productos acProducto) {
        initComponents();
        this.tabla = tabla;
        this.acProducto = acProducto;
        LabelTOP.setText(titulo);
        llenarComboBoxProveedor();
        llenarComboBoxCategorias();
        if (LabelTOP.getText().equals("Actualizar Producto")) {
            jPanel19.removeAll();
            jPanel20.removeAll();
            jPanel21.removeAll();
            destinationPath = acProducto.getFoto();
            cmb_CategoriaId.setSelectedItem(catDAO.leerCategoria(String.valueOf(acProducto.getCategoria_id())).getNombre());
            cmb_ProveedorId.setSelectedItem(proDAO.leerProveedor(acProducto.getProveedor_id()).getRazon_social());
            cmb_TipoVentaProducto.setSelectedItem(acProducto.getTipo_venta());
            txt_CodigoProducto.setText(String.valueOf(acProducto.getCodigo()));
            txt_NombreProducto.setText(acProducto.getNombre());
            txt_DescripcionProducto.setText(acProducto.getDescripcion());
            txt_PrecioCompraProducto.setText(String.valueOf(acProducto.getPrecio_compra()));
            txt_GananciaProducto.setText(String.valueOf(acProducto.getGanancia()));
            txt_PrecioVentaProducto.setText(String.valueOf(acProducto.getPrecio_venta()));
            txt_PrecioMayoreoProducto.setText(String.valueOf(acProducto.getPrecio_mayoreo()));
            txt_ImpuestoProducto.setText(String.valueOf(acProducto.getImpuesto()));
            lbl_ImagenNuevoProducto.setIcon(redimensionarIcon(acProducto.getFoto(), 200, 200));
            txt_InventarioMaxProducto.setText("1");
            txt_InventarioMinProducto.setText("1");
            txt_CantidadProducto.setText("1");
        }
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ContenedorFormulario = new javax.swing.JPanel();
        LabelTOP = new javax.swing.JLabel();
        ContenedorCenter = new javax.swing.JPanel();
        foto = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        lbl_ImagenNuevoProducto = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        roundedButton1_Invoice1 = new com.superventas.pos.view.components.RoundedButton1_Invoice();
        formulario = new javax.swing.JPanel();
        Parte1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_CodigoProducto = new com.superventas.pos.view.components.RoundedTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txt_NombreProducto = new com.superventas.pos.view.components.RoundedTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_DescripcionProducto = new com.superventas.pos.view.components.RoundedTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cmb_TipoVentaProducto = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txt_PrecioCompraProducto = new com.superventas.pos.view.components.RoundedTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txt_GananciaProducto = new com.superventas.pos.view.components.RoundedTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txt_PrecioVentaProducto = new com.superventas.pos.view.components.RoundedTextField();
        parte2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txt_PrecioMayoreoProducto = new com.superventas.pos.view.components.RoundedTextField();
        jPanel12 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txt_ImpuestoProducto = new com.superventas.pos.view.components.RoundedTextField();
        jPanel19 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txt_CantidadProducto = new com.superventas.pos.view.components.RoundedTextField();
        jPanel20 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txt_InventarioMinProducto = new com.superventas.pos.view.components.RoundedTextField();
        jPanel21 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txt_InventarioMaxProducto = new com.superventas.pos.view.components.RoundedTextField();
        jPanel13 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        cmb_ProveedorId = new javax.swing.JComboBox<>();
        jPanel14 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        cmb_CategoriaId = new javax.swing.JComboBox<>();
        ContenedorButtom = new javax.swing.JPanel();
        Button = new javax.swing.JPanel();
        btn_guardar = new com.superventas.pos.view.components.RoundedButton1_Invoice();
        btn_limpiarCampos = new com.superventas.pos.view.components.RoundedButton1_Invoice();
        btn_volver = new com.superventas.pos.view.components.RoundedButton1_Invoice();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        ContenedorFormulario.setBackground(new java.awt.Color(41, 1, 138));
        ContenedorFormulario.setLayout(new java.awt.BorderLayout());

        LabelTOP.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        LabelTOP.setForeground(new java.awt.Color(255, 255, 255));
        LabelTOP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelTOP.setText("Nuevo Producto");
        LabelTOP.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        LabelTOP.setPreferredSize(new java.awt.Dimension(209, 60));
        ContenedorFormulario.add(LabelTOP, java.awt.BorderLayout.NORTH);

        ContenedorCenter.setOpaque(false);
        ContenedorCenter.setLayout(new java.awt.BorderLayout());

        foto.setOpaque(false);
        foto.setLayout(new java.awt.BorderLayout());

        jLabel1.setBackground(new java.awt.Color(41, 1, 138));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Foto Producto");
        jLabel1.setOpaque(true);
        jLabel1.setPreferredSize(new java.awt.Dimension(37, 40));
        foto.add(jLabel1, java.awt.BorderLayout.NORTH);

        jPanel17.setOpaque(false);
        jPanel17.setLayout(new java.awt.GridBagLayout());

        lbl_ImagenNuevoProducto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_ImagenNuevoProducto.setIcon(redimensionarIcon("src/main/java/com/superventas/pos/img/ImgAggProducto.png", 200, 200)
        );
        lbl_ImagenNuevoProducto.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanel17.add(lbl_ImagenNuevoProducto, new java.awt.GridBagConstraints());

        foto.add(jPanel17, java.awt.BorderLayout.CENTER);

        jPanel18.setOpaque(false);
        jPanel18.setPreferredSize(new java.awt.Dimension(300, 150));
        jPanel18.setLayout(new java.awt.GridBagLayout());

        roundedButton1_Invoice1.setBackground(new java.awt.Color(168, 8, 72));
        roundedButton1_Invoice1.setBorder(null);
        roundedButton1_Invoice1.setForeground(new java.awt.Color(255, 255, 255));
        roundedButton1_Invoice1.setText("Seleccionar Imagen");
        roundedButton1_Invoice1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        roundedButton1_Invoice1.setPreferredSize(new java.awt.Dimension(200, 60));
        roundedButton1_Invoice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundedButton1_Invoice1ActionPerformed(evt);
            }
        });
        jPanel18.add(roundedButton1_Invoice1, new java.awt.GridBagConstraints());

        foto.add(jPanel18, java.awt.BorderLayout.PAGE_END);

        ContenedorCenter.add(foto, java.awt.BorderLayout.CENTER);

        formulario.setOpaque(false);
        formulario.setPreferredSize(new java.awt.Dimension(700, 510));
        formulario.setLayout(new java.awt.BorderLayout());

        Parte1.setOpaque(false);
        Parte1.setPreferredSize(new java.awt.Dimension(350, 100));
        Parte1.setLayout(new java.awt.GridLayout(8, 1));

        jPanel8.setOpaque(false);
        Parte1.add(jPanel8);

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("(*) Codigo:");
        jPanel2.add(jLabel2);

        txt_CodigoProducto.setForeground(new java.awt.Color(153, 153, 153));
        txt_CodigoProducto.setText("0");
        txt_CodigoProducto.setMargin(new java.awt.Insets(2, 12, 2, 6));
        txt_CodigoProducto.setPreferredSize(new java.awt.Dimension(150, 25));
        txt_CodigoProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_CodigoProductoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_CodigoProductoFocusLost(evt);
            }
        });
        jPanel2.add(txt_CodigoProducto);

        Parte1.add(jPanel2);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("(*) Nombre:");
        jPanel3.add(jLabel3);

        txt_NombreProducto.setForeground(new java.awt.Color(153, 153, 153));
        txt_NombreProducto.setText("Producto");
        txt_NombreProducto.setMargin(new java.awt.Insets(2, 12, 2, 6));
        txt_NombreProducto.setPreferredSize(new java.awt.Dimension(150, 25));
        txt_NombreProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_NombreProductoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_NombreProductoFocusLost(evt);
            }
        });
        jPanel3.add(txt_NombreProducto);

        Parte1.add(jPanel3);

        jPanel4.setOpaque(false);
        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Descripcion:");
        jPanel4.add(jLabel4);

        txt_DescripcionProducto.setForeground(new java.awt.Color(153, 153, 153));
        txt_DescripcionProducto.setText("Descripcion");
        txt_DescripcionProducto.setMargin(new java.awt.Insets(2, 12, 2, 6));
        txt_DescripcionProducto.setPreferredSize(new java.awt.Dimension(150, 25));
        txt_DescripcionProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_DescripcionProductoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_DescripcionProductoFocusLost(evt);
            }
        });
        jPanel4.add(txt_DescripcionProducto);

        Parte1.add(jPanel4);

        jPanel5.setOpaque(false);
        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Tipo Venta:");
        jPanel5.add(jLabel5);

        cmb_TipoVentaProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "UNIDAD", "PESO", "GRANEL" }));
        cmb_TipoVentaProducto.setPreferredSize(new java.awt.Dimension(150, 25));
        jPanel5.add(cmb_TipoVentaProducto);

        Parte1.add(jPanel5);

        jPanel6.setOpaque(false);
        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("(*) Precio Compra:");
        jPanel6.add(jLabel6);

        txt_PrecioCompraProducto.setForeground(new java.awt.Color(153, 153, 153));
        txt_PrecioCompraProducto.setText("0.00");
        txt_PrecioCompraProducto.setMargin(new java.awt.Insets(2, 12, 2, 6));
        txt_PrecioCompraProducto.setPreferredSize(new java.awt.Dimension(150, 25));
        txt_PrecioCompraProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_PrecioCompraProductoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_PrecioCompraProductoFocusLost(evt);
            }
        });
        txt_PrecioCompraProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_PrecioCompraProductoKeyReleased(evt);
            }
        });
        jPanel6.add(txt_PrecioCompraProducto);

        Parte1.add(jPanel6);

        jPanel10.setOpaque(false);
        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("(*) Ganancia % :");
        jPanel10.add(jLabel8);

        txt_GananciaProducto.setForeground(new java.awt.Color(0, 0, 0));
        txt_GananciaProducto.setText("30.00");
        txt_GananciaProducto.setMargin(new java.awt.Insets(2, 12, 2, 6));
        txt_GananciaProducto.setPreferredSize(new java.awt.Dimension(150, 25));
        txt_GananciaProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_GananciaProductoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_GananciaProductoFocusLost(evt);
            }
        });
        txt_GananciaProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_GananciaProductoKeyReleased(evt);
            }
        });
        jPanel10.add(txt_GananciaProducto);

        Parte1.add(jPanel10);

        jPanel11.setOpaque(false);
        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("(*) Precio Venta:");
        jPanel11.add(jLabel9);

        txt_PrecioVentaProducto.setForeground(new java.awt.Color(153, 153, 153));
        txt_PrecioVentaProducto.setText("0.00");
        txt_PrecioVentaProducto.setMargin(new java.awt.Insets(2, 12, 2, 6));
        txt_PrecioVentaProducto.setPreferredSize(new java.awt.Dimension(150, 25));
        txt_PrecioVentaProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_PrecioVentaProductoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_PrecioVentaProductoFocusLost(evt);
            }
        });
        txt_PrecioVentaProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_PrecioVentaProductoKeyReleased(evt);
            }
        });
        jPanel11.add(txt_PrecioVentaProducto);

        Parte1.add(jPanel11);

        formulario.add(Parte1, java.awt.BorderLayout.WEST);

        parte2.setOpaque(false);
        parte2.setLayout(new java.awt.GridLayout(8, 1));

        jPanel9.setOpaque(false);
        parte2.add(jPanel9);

        jPanel7.setOpaque(false);
        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Precio Mayoreo:");
        jPanel7.add(jLabel7);

        txt_PrecioMayoreoProducto.setForeground(new java.awt.Color(153, 153, 153));
        txt_PrecioMayoreoProducto.setText("0.00");
        txt_PrecioMayoreoProducto.setMargin(new java.awt.Insets(2, 12, 2, 6));
        txt_PrecioMayoreoProducto.setPreferredSize(new java.awt.Dimension(150, 25));
        txt_PrecioMayoreoProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_PrecioMayoreoProductoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_PrecioMayoreoProductoFocusLost(evt);
            }
        });
        jPanel7.add(txt_PrecioMayoreoProducto);

        parte2.add(jPanel7);

        jPanel12.setOpaque(false);
        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("(*) Impuesto %:");
        jPanel12.add(jLabel10);

        txt_ImpuestoProducto.setForeground(new java.awt.Color(153, 153, 153));
        txt_ImpuestoProducto.setText("00.00");
        txt_ImpuestoProducto.setMargin(new java.awt.Insets(2, 12, 2, 6));
        txt_ImpuestoProducto.setPreferredSize(new java.awt.Dimension(150, 25));
        txt_ImpuestoProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_ImpuestoProductoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_ImpuestoProductoFocusLost(evt);
            }
        });
        jPanel12.add(txt_ImpuestoProducto);

        parte2.add(jPanel12);

        jPanel19.setOpaque(false);
        jPanel19.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("(*) Cantidad:");
        jPanel19.add(jLabel13);

        txt_CantidadProducto.setForeground(new java.awt.Color(153, 153, 153));
        txt_CantidadProducto.setText("0");
        txt_CantidadProducto.setMargin(new java.awt.Insets(2, 12, 2, 6));
        txt_CantidadProducto.setPreferredSize(new java.awt.Dimension(150, 25));
        txt_CantidadProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_CantidadProductoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_CantidadProductoFocusLost(evt);
            }
        });
        jPanel19.add(txt_CantidadProducto);

        parte2.add(jPanel19);

        jPanel20.setOpaque(false);
        jPanel20.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("(*) Inventario minimo:");
        jPanel20.add(jLabel14);

        txt_InventarioMinProducto.setForeground(new java.awt.Color(153, 153, 153));
        txt_InventarioMinProducto.setText("0");
        txt_InventarioMinProducto.setMargin(new java.awt.Insets(2, 12, 2, 6));
        txt_InventarioMinProducto.setPreferredSize(new java.awt.Dimension(150, 25));
        txt_InventarioMinProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_InventarioMinProductoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_InventarioMinProductoFocusLost(evt);
            }
        });
        jPanel20.add(txt_InventarioMinProducto);

        parte2.add(jPanel20);

        jPanel21.setOpaque(false);
        jPanel21.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("(*) Inventario maximo:");
        jPanel21.add(jLabel15);

        txt_InventarioMaxProducto.setForeground(new java.awt.Color(153, 153, 153));
        txt_InventarioMaxProducto.setText("0");
        txt_InventarioMaxProducto.setMargin(new java.awt.Insets(2, 12, 2, 6));
        txt_InventarioMaxProducto.setPreferredSize(new java.awt.Dimension(145, 25));
        txt_InventarioMaxProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_InventarioMaxProductoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_InventarioMaxProductoFocusLost(evt);
            }
        });
        jPanel21.add(txt_InventarioMaxProducto);

        parte2.add(jPanel21);

        jPanel13.setOpaque(false);
        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Proveedor ID:");
        jPanel13.add(jLabel11);

        cmb_ProveedorId.setPreferredSize(new java.awt.Dimension(150, 25));
        jPanel13.add(cmb_ProveedorId);

        parte2.add(jPanel13);

        jPanel14.setOpaque(false);
        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Categoria ID:");
        jPanel14.add(jLabel12);

        cmb_CategoriaId.setPreferredSize(new java.awt.Dimension(150, 25));
        jPanel14.add(cmb_CategoriaId);

        parte2.add(jPanel14);

        formulario.add(parte2, java.awt.BorderLayout.CENTER);

        ContenedorCenter.add(formulario, java.awt.BorderLayout.WEST);

        ContenedorFormulario.add(ContenedorCenter, java.awt.BorderLayout.CENTER);

        ContenedorButtom.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        ContenedorButtom.setOpaque(false);
        ContenedorButtom.setPreferredSize(new java.awt.Dimension(100, 130));
        ContenedorButtom.setLayout(new java.awt.GridBagLayout());

        Button.setOpaque(false);
        Button.setPreferredSize(new java.awt.Dimension(450, 80));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 0);
        flowLayout1.setAlignOnBaseline(true);
        Button.setLayout(flowLayout1);

        btn_guardar.setBackground(new java.awt.Color(168, 8, 72));
        btn_guardar.setBorder(null);
        btn_guardar.setForeground(new java.awt.Color(255, 255, 255));
        btn_guardar.setIcon(new ImageIcon
            ("src/main/java/com/superventas/pos/img/Save.png"));
        btn_guardar.setText("");
        btn_guardar.setFocusable(false);
        btn_guardar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn_guardar.setPreferredSize(new java.awt.Dimension(120, 80));
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });
        Button.add(btn_guardar);

        btn_limpiarCampos.setBackground(new java.awt.Color(168, 8, 72));
        btn_limpiarCampos.setBorder(null);
        btn_limpiarCampos.setForeground(new java.awt.Color(255, 255, 255));
        btn_limpiarCampos.setIcon(new ImageIcon("src/main/java/com/superventas/pos/img/Limpiar.png"));
        btn_limpiarCampos.setText("");
        btn_limpiarCampos.setFocusable(false);
        btn_limpiarCampos.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn_limpiarCampos.setPreferredSize(new java.awt.Dimension(120, 80));
        btn_limpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarCamposActionPerformed(evt);
            }
        });
        Button.add(btn_limpiarCampos);

        btn_volver.setBackground(new java.awt.Color(168, 8, 72));
        btn_volver.setBorder(null);
        btn_volver.setForeground(new java.awt.Color(255, 255, 255));
        btn_volver.setIcon(new ImageIcon("src/main/java/com/superventas/pos/img/Atras.png"));
        btn_volver.setText("");
        btn_volver.setFocusable(false);
        btn_volver.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btn_volver.setPreferredSize(new java.awt.Dimension(120, 80));
        btn_volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_volverActionPerformed(evt);
            }
        });
        Button.add(btn_volver);

        ContenedorButtom.add(Button, new java.awt.GridBagConstraints());

        ContenedorFormulario.add(ContenedorButtom, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1010, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(ContenedorFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(ContenedorFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void roundedButton1_Invoice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundedButton1_Invoice1ActionPerformed
        String ruta = "";
        JFileChooser file = new JFileChooser();
        file.setDialogTitle("Guardar Foto");
        FileNameExtensionFilter filtrado = new FileNameExtensionFilter("JPG, PNG & GIF", "jpg", "png", "gif");
        file.setFileFilter(filtrado);
        int respuesta = file.showOpenDialog(this);
        if (respuesta == JFileChooser.APPROVE_OPTION) {
            selectedFile = file.getSelectedFile();
            ruta = file.getSelectedFile().getPath();
            ImageIcon mImagen = redimensionarIcon(ruta, 200, 200);
            lbl_ImagenNuevoProducto.setIcon(mImagen);
        }
    }//GEN-LAST:event_roundedButton1_Invoice1ActionPerformed

    private void btn_volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_volverActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_volverActionPerformed

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        if (cmb_TipoVentaProducto.getSelectedIndex() != 0 && cmb_ProveedorId.getSelectedIndex() != 0 && cmb_CategoriaId.getSelectedIndex() != 0) {
            if (!txt_CodigoProducto.getText().equals("0") && !txt_NombreProducto.getText().equals("producto") && !txt_PrecioCompraProducto.getText().equals("0.00") && !txt_GananciaProducto.getText().equals("00.00") && !txt_PrecioVentaProducto.getText().equals("0.00") && !txt_ImpuestoProducto.getText().equals("00.00") && !txt_CantidadProducto.getText().equals("0") && !txt_InventarioMinProducto.getText().equals("0") && !txt_InventarioMaxProducto.getText().equals("0")) {
                if (selectedFile != null) {
                    try {
                        destinationPath = "src/main/java/img_products/" + selectedFile.getName(); // Cambiar a la ruta deseada
                        File destinationFile = new File(destinationPath);
                        Files.copy(selectedFile.toPath(), destinationFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
                        JOptionPane.showMessageDialog(this, "Archivo guardado correctamente en " + destinationPath);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "Error al guardar el archivo: " + ex.getMessage());
                    }
                } else {
                    if (destinationPath == null) {
                        destinationPath = "src/main/java/img_products/ImgAggProducto.png";
                    }
                }
                Productos producto = new Productos();
                producto.setCodigo(Integer.parseInt(txt_CodigoProducto.getText()));
                producto.setNombre(txt_NombreProducto.getText());
                producto.setDescripcion(txt_DescripcionProducto.getText());
                producto.setFoto(destinationPath);
                producto.setTipo_venta(cmb_TipoVentaProducto.getSelectedItem().toString());
                producto.setPrecio_compra(Double.valueOf(txt_PrecioCompraProducto.getText()));
                producto.setGanancia(Double.valueOf(txt_GananciaProducto.getText()) / 100);
                producto.setPrecio_venta(Double.valueOf(txt_PrecioVentaProducto.getText()));
                producto.setPrecio_mayoreo(Double.valueOf(txt_PrecioMayoreoProducto.getText()));
                producto.setImpuesto(Double.valueOf(txt_ImpuestoProducto.getText()) / 100);
                producto.setProveedor_id(proDAO.leerProveedorRazonSocial(cmb_ProveedorId.getSelectedItem().toString()).getProveedor_id());
                producto.setCategoria_id(catDAO.leerCategoriaNombre(cmb_CategoriaId.getSelectedItem().toString()).getCategoria_id());
                if (LabelTOP.getText().equals("Nuevo Producto")) {

                    try {
                        if (productoDAO.leerProductoCodigo(String.valueOf(producto.getCodigo())) != null) {
                            JOptionPane.showMessageDialog(this, "El codigo ya esta registrado.", "Producto Registrado en sistema", JOptionPane.ERROR_MESSAGE);
                        } else {
                            productoDAO.insertarProductos(producto);
                            try {
                                Inventario inventario = new Inventario();
                                inventario.setCantidad(Double.valueOf(txt_CantidadProducto.getText()));
                                inventario.setInventario_min(Double.valueOf(txt_InventarioMinProducto.getText()));
                                inventario.setInventario_max(Double.valueOf(txt_InventarioMaxProducto.getText()));
                                inventario.setProducto_id(productoDAO.leerProductoCodigo(String.valueOf(producto.getCodigo())).getProducto_id());
                                invDAO.insertarInventario(inventario);
                                JOptionPane.showMessageDialog(this, "El Producto se ha registrado exitosamente", "Registro Exitoso", JOptionPane.INFORMATION_MESSAGE);
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(this, "Error inesperado en inventario: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                            }
                            rellenarTablaProductos(tabla);
                            this.dispose();
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Error inesperado: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else if (LabelTOP.getText().equals("Actualizar Producto")) {
                    try {
                        productoDAO.modificarProductos(String.valueOf(acProducto.getProducto_id()), producto);
                        JOptionPane.showMessageDialog(this, "El Producto se ha actualizado exitosamente", "Registro Exitoso", JOptionPane.INFORMATION_MESSAGE);
                        rellenarTablaProductos(tabla);
                        this.dispose();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Error inesperado: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Los debes llenar todas los campos marcados con el (*)", "Mensaje de alerta", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Los debes llenar todas las listas desplegables", "Mensaje de alerta", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void btn_limpiarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarCamposActionPerformed
        cmb_TipoVentaProducto.setSelectedIndex(0);
        cmb_ProveedorId.setSelectedIndex(0);
        cmb_CategoriaId.setSelectedIndex(0);
        txt_CodigoProducto.setText("");
        txt_NombreProducto.setText("");
        txt_DescripcionProducto.setText("");
        txt_PrecioCompraProducto.setText("");
        txt_GananciaProducto.setText("");
        txt_PrecioVentaProducto.setText("");
        txt_PrecioMayoreoProducto.setText("");
        txt_ImpuestoProducto.setText("");
    }//GEN-LAST:event_btn_limpiarCamposActionPerformed

    private void txt_GananciaProductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_GananciaProductoKeyReleased
        timer.cancel(); // Cancelar el temporizador anterior
        timer = new Timer(); // Crear un nuevo temporizador
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                SwingUtilities.invokeLater(() -> {
                    double ganacia = Double.parseDouble(txt_GananciaProducto.getText()) / 100;
                    double precio_compra = Double.parseDouble(txt_PrecioCompraProducto.getText());
                    double precio_sugerido = precio_compra * (1 + ganacia);
                    txt_PrecioVentaProducto.setText(String.format(Locale.US, "%.2f", precio_sugerido));
                    txt_PrecioVentaProducto.setForeground(Color.black);
                });
            }
        }, 300);
    }//GEN-LAST:event_txt_GananciaProductoKeyReleased

    private void txt_PrecioCompraProductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_PrecioCompraProductoKeyReleased
        timer.cancel(); // Cancelar el temporizador anterior
        timer = new Timer(); // Crear un nuevo temporizador
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                SwingUtilities.invokeLater(() -> {
                    double ganacia = Double.parseDouble(txt_GananciaProducto.getText()) / 100;
                    double precio_compra = Double.parseDouble(txt_PrecioCompraProducto.getText());
                    double precio_sugerido = precio_compra * (1 + ganacia);
                    txt_PrecioVentaProducto.setText(String.format(Locale.US, "%.2f", precio_sugerido));
                    txt_PrecioVentaProducto.setForeground(Color.black);
                });
            }
        }, 300);
    }//GEN-LAST:event_txt_PrecioCompraProductoKeyReleased

    private void txt_PrecioVentaProductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_PrecioVentaProductoKeyReleased
        timer.cancel(); // Cancelar el temporizador anterior
        timer = new Timer(); // Crear un nuevo temporizador
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                SwingUtilities.invokeLater(() -> {
                    //pv = pc*(1+i)
                    //pv/pc-1=i
                    double precio_venta = Double.parseDouble(txt_PrecioVentaProducto.getText());
                    double precio_compra = Double.parseDouble(txt_PrecioCompraProducto.getText());
                    double ganacia = ((precio_venta / precio_compra) - 1) * 100;
                    txt_GananciaProducto.setText(String.format(Locale.US, "%.2f", ganacia));
                    txt_GananciaProducto.setForeground(Color.black);
                });
            }
        }, 300);
    }//GEN-LAST:event_txt_PrecioVentaProductoKeyReleased

    private void txt_CodigoProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_CodigoProductoFocusGained
        if (txt_CodigoProducto.getText().equals("0")) {
            txt_CodigoProducto.setText("");
            txt_CodigoProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_CodigoProductoFocusGained

    private void txt_CodigoProductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_CodigoProductoFocusLost
        if (txt_CodigoProducto.getText().isEmpty()) {
            txt_CodigoProducto.setText("0");
            txt_CodigoProducto.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_CodigoProductoFocusLost

    private void txt_NombreProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_NombreProductoFocusGained
        if (txt_NombreProducto.getText().equals("Producto")) {
            txt_NombreProducto.setText("");
            txt_NombreProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_NombreProductoFocusGained

    private void txt_NombreProductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_NombreProductoFocusLost
        if (txt_NombreProducto.getText().isEmpty()) {
            txt_NombreProducto.setText("Producto");
            txt_NombreProducto.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_NombreProductoFocusLost

    private void txt_DescripcionProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_DescripcionProductoFocusGained
        if (txt_DescripcionProducto.getText().equals("Descripcion")) {
            txt_DescripcionProducto.setText("");
            txt_DescripcionProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_DescripcionProductoFocusGained

    private void txt_DescripcionProductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_DescripcionProductoFocusLost
        if (txt_DescripcionProducto.getText().isEmpty()) {
            txt_DescripcionProducto.setText("Descripcion");
            txt_DescripcionProducto.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_DescripcionProductoFocusLost

    private void txt_PrecioCompraProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_PrecioCompraProductoFocusGained
        if (txt_PrecioCompraProducto.getText().equals("0.00")) {
            txt_PrecioCompraProducto.setText("");
            txt_PrecioCompraProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_PrecioCompraProductoFocusGained

    private void txt_PrecioCompraProductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_PrecioCompraProductoFocusLost
        if (txt_PrecioCompraProducto.getText().isEmpty()) {
            txt_PrecioCompraProducto.setText("0.00");
            txt_PrecioCompraProducto.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_PrecioCompraProductoFocusLost

    private void txt_GananciaProductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_GananciaProductoFocusLost
        if (txt_GananciaProducto.getText().isEmpty()) {
            txt_GananciaProducto.setText("00.00");
            txt_GananciaProducto.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_GananciaProductoFocusLost

    private void txt_PrecioVentaProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_PrecioVentaProductoFocusGained
        if (txt_PrecioVentaProducto.getText().equals("0.00")) {
            txt_PrecioVentaProducto.setText("");
            txt_PrecioVentaProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_PrecioVentaProductoFocusGained

    private void txt_PrecioVentaProductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_PrecioVentaProductoFocusLost
        if (txt_PrecioVentaProducto.getText().isEmpty()) {
            txt_PrecioVentaProducto.setText("0.00");
            txt_PrecioVentaProducto.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_PrecioVentaProductoFocusLost

    private void txt_PrecioMayoreoProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_PrecioMayoreoProductoFocusGained
        if (txt_PrecioMayoreoProducto.getText().equals("0.00")) {
            txt_PrecioMayoreoProducto.setText("");
            txt_PrecioMayoreoProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_PrecioMayoreoProductoFocusGained

    private void txt_PrecioMayoreoProductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_PrecioMayoreoProductoFocusLost
        if (txt_PrecioMayoreoProducto.getText().isEmpty()) {
            txt_PrecioMayoreoProducto.setText("0.00");
            txt_PrecioMayoreoProducto.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_PrecioMayoreoProductoFocusLost

    private void txt_ImpuestoProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_ImpuestoProductoFocusGained
        if (txt_ImpuestoProducto.getText().equals("00.00")) {
            txt_ImpuestoProducto.setText("");
            txt_ImpuestoProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_ImpuestoProductoFocusGained

    private void txt_ImpuestoProductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_ImpuestoProductoFocusLost
        if (txt_ImpuestoProducto.getText().isEmpty()) {
            txt_ImpuestoProducto.setText("00.00");
            txt_ImpuestoProducto.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_ImpuestoProductoFocusLost

    private void txt_CantidadProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_CantidadProductoFocusGained
        if (txt_CantidadProducto.getText().equals("0")) {
            txt_CantidadProducto.setText("");
            txt_CantidadProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_CantidadProductoFocusGained

    private void txt_CantidadProductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_CantidadProductoFocusLost
        if (txt_CantidadProducto.getText().isEmpty()) {
            txt_CantidadProducto.setText("0");
            txt_CantidadProducto.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_CantidadProductoFocusLost

    private void txt_InventarioMinProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_InventarioMinProductoFocusGained
        if (txt_InventarioMinProducto.getText().equals("0")) {
            txt_InventarioMinProducto.setText("");
            txt_InventarioMinProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_InventarioMinProductoFocusGained

    private void txt_InventarioMinProductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_InventarioMinProductoFocusLost
        if (txt_InventarioMinProducto.getText().isEmpty()) {
            txt_InventarioMinProducto.setText("0");
            txt_InventarioMinProducto.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_InventarioMinProductoFocusLost

    private void txt_InventarioMaxProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_InventarioMaxProductoFocusGained
        if (txt_InventarioMaxProducto.getText().equals("0")) {
            txt_InventarioMaxProducto.setText("");
            txt_InventarioMaxProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_InventarioMaxProductoFocusGained

    private void txt_InventarioMaxProductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_InventarioMaxProductoFocusLost
        if (txt_InventarioMaxProducto.getText().isEmpty()) {
            txt_InventarioMaxProducto.setText("0");
            txt_InventarioMaxProducto.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_InventarioMaxProductoFocusLost

    private void txt_GananciaProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_GananciaProductoFocusGained
        if (txt_GananciaProducto.getText().equals("00.00")) {
            txt_GananciaProducto.setText("");
            txt_GananciaProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_GananciaProductoFocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Button;
    private javax.swing.JPanel ContenedorButtom;
    private javax.swing.JPanel ContenedorCenter;
    private javax.swing.JPanel ContenedorFormulario;
    private javax.swing.JLabel LabelTOP;
    private javax.swing.JPanel Parte1;
    private com.superventas.pos.view.components.RoundedButton1_Invoice btn_guardar;
    private com.superventas.pos.view.components.RoundedButton1_Invoice btn_limpiarCampos;
    private com.superventas.pos.view.components.RoundedButton1_Invoice btn_volver;
    private javax.swing.JComboBox<String> cmb_CategoriaId;
    private javax.swing.JComboBox<String> cmb_ProveedorId;
    private javax.swing.JComboBox<String> cmb_TipoVentaProducto;
    private javax.swing.JPanel formulario;
    private javax.swing.JPanel foto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel lbl_ImagenNuevoProducto;
    private javax.swing.JPanel parte2;
    private com.superventas.pos.view.components.RoundedButton1_Invoice roundedButton1_Invoice1;
    private com.superventas.pos.view.components.RoundedTextField txt_CantidadProducto;
    private com.superventas.pos.view.components.RoundedTextField txt_CodigoProducto;
    private com.superventas.pos.view.components.RoundedTextField txt_DescripcionProducto;
    private com.superventas.pos.view.components.RoundedTextField txt_GananciaProducto;
    private com.superventas.pos.view.components.RoundedTextField txt_ImpuestoProducto;
    private com.superventas.pos.view.components.RoundedTextField txt_InventarioMaxProducto;
    private com.superventas.pos.view.components.RoundedTextField txt_InventarioMinProducto;
    private com.superventas.pos.view.components.RoundedTextField txt_NombreProducto;
    private com.superventas.pos.view.components.RoundedTextField txt_PrecioCompraProducto;
    private com.superventas.pos.view.components.RoundedTextField txt_PrecioMayoreoProducto;
    private com.superventas.pos.view.components.RoundedTextField txt_PrecioVentaProducto;
    // End of variables declaration//GEN-END:variables

    public void rellenarTablaProductos(JTable tabla) {
        DefaultTableModel model = new DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "ID", "Codigo", "Nombre", "Descripcion", "Tipo Venta", "Precio Compra", "Ganacia", "Precio Venta", "Precio Mayoreo", "Impuesto", "Proveedor", "Categoria"
                }
        ) {

            public boolean isCellEditable(int row, int column) {
                return false; // All cells are not editable
            }
        };

        tabla.setModel(model);
        model.setRowCount(0); // Clear the table

        List<Productos> listaProductos = productoDAO.LeerTodosProductos();

        for (Productos producto : listaProductos) {
            Object[] fila = new Object[12];
            fila[0] = producto.getProducto_id();
            fila[1] = producto.getCodigo();
            fila[2] = producto.getNombre();
            fila[3] = producto.getDescripcion();
            fila[4] = producto.getTipo_venta();
            fila[5] = producto.getPrecio_compra();
            fila[6] = producto.getGanancia();
            fila[7] = producto.getPrecio_venta();
            fila[8] = producto.getPrecio_mayoreo();
            fila[9] = producto.getImpuesto();
            fila[10] = proDAO.leerProveedor(producto.getProveedor_id()).getRazon_social();
            fila[11] = catDAO.leerCategoria(String.valueOf(producto.getCategoria_id())).getNombre();
            model.addRow(fila);
        }
    }

    private void llenarComboBoxProveedor() {
        List<Proveedor> listaProveedores = proDAO.LeerTodosProveedor();
        cmb_ProveedorId.addItem("-");
        for (Proveedor proveedor : listaProveedores) {
            cmb_ProveedorId.addItem(proveedor.getRazon_social());
        }
    }

    private void llenarComboBoxCategorias() {
        List<Categorias> listaCategorias = catDAO.LeerTodosCategorias();
        cmb_CategoriaId.addItem("-");
        for (Categorias categoria : listaCategorias) {
            cmb_CategoriaId.addItem(categoria.getNombre());
        }
    }

    public ImageIcon redimensionarIcon(String url, int width, int height) {
        ImageIcon icon = new ImageIcon(url);
        // Obtener la imagen original
        Image img = icon.getImage();
        // Redimensionar la imagen
        Image newImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH);
        // Crear un nuevo ImageIcon con la imagen redimensionada
        ImageIcon newIcon = new ImageIcon(newImg);
        return newIcon;
    }
}
